services:
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    security_opt:
      - no-new-privileges:true
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    security_opt:
      - no-new-privileges:true
    working_dir: /app
    volumes:
      - ./:/app
    build:
      context: ./
      dockerfile: containers/api/Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8881 --reload
    restart: on-failure
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
      - PAGINATION_DEFAULT_LIMIT=${PAGINATION_DEFAULT_LIMIT}
    ports:
      - "8881:8881"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  pgadmin:
    depends_on:
      - db
    build:
      dockerfile: Dockerfile
      context: containers/pgadmin
    env_file:
      - containers/pgadmin/pgadmin.env
    ports:
      - 8484:80
    networks:
      - backend
volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
